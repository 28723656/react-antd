import React,{Component} from 'react'
import {Col, Input, Modal, Row, Select,Form} from "antd";
import PropTypes from "prop-types";
import {addAjax, updateAjax} from "../../../util/ajax";
const {Option} = Select
const {TextArea} = Input;

class LuckyUpdateModalForm extends Component{

    static propTypes = {
        luckyTitle:PropTypes.string.isRequired,
        visibleLucky:PropTypes.bool.isRequired,
        handleLuckyCancel:PropTypes.func.isRequired,
        initLuckyData:PropTypes.func.isRequired,
        luckyEntity:PropTypes.object.isRequired,

    }

    // Êèê‰∫§‰øÆÊîπÊ¶ÇÁéáÊï∞ÊçÆ
    handleLuckyOk =(e) =>{
        e.preventDefault();
        this.props.form.validateFields((err, values) => {
            if (!err) {
                // Â§ÑÁêÜ‰∫Ü‰∏Ä‰∏ã‰∫ßÂá∫ÁöÑÊòæÁ§∫  Êää BASCDËΩ¨ÂåñÊàê SABCD
                const output = values.output;
                let testArr = output.sort();  // ABCDS
                if(testArr.indexOf('S')!==-1){
                    testArr.unshift(testArr.splice(testArr.length-1,1)[0]);
                }
                values.output=testArr.join('');
                console.log('Received values of form: ', values);

                // ‰øÆÊîπ
                if(values.id){
                    updateAjax('/game/lucky',values)
                        .then(response =>{
                            this.props.initLuckyData();
                        })
                }else {
                    // Ê∑ªÂä†
                    addAjax('/game/lucky',values)
                        .then(response =>{
                            this.props.initLuckyData();
                        })
                }

            }
        });
        this.props.handleLuckyCancel();
    }

    render() {
        const {getFieldDecorator} = this.props.form;
        const {luckyTitle,visibleLucky,handleLuckyCancel,luckyEntity} = this.props

        return (
            <Modal
                destroyOnClose={true}
                title={luckyTitle}
                visible={visibleLucky}
                onOk={this.handleLuckyOk}
                onCancel={handleLuckyCancel}
            >
                <Form >
                    <Row gutter={5}>

                        <Col xs={24}>
                            <Form.Item label="ÊäΩÂ•ñÂêçÁß∞">
                                {getFieldDecorator('name', {initialValue: luckyEntity.name || ''})(
                                    <Input />,
                                )}
                            </Form.Item>
                        </Col>

                        <Col xs={12}>
                            {getFieldDecorator('id', {initialValue: luckyEntity.id || null})(
                                <Input hidden={true}/>,
                            )}
                            <Form.Item label="Á±ªÂûã">
                                {getFieldDecorator('type', {initialValue: luckyEntity.type || 1})(
                                    <Select>
                                        <Option value={1}>ÂÖçË¥πÂç°ÂåÖ</Option>
                                        <Option value={2}>ÊôÆÈÄöÂç°ÂåÖ</Option>
                                        <Option value={3}>È´òÁ∫ßÂç°ÂåÖ</Option>
                                        <Option value={4}>Ëá≥Â∞äÂç°ÂåÖ</Option>
                                    </Select>,
                                )}
                            </Form.Item>
                        </Col>
                        <Col xs={12}>
                            <Form.Item label="‰∫ßÂá∫">
                                {getFieldDecorator('output', {initialValue: luckyEntity.output && luckyEntity.output.split('') || ['D']})(
                                    <Select mode="multiple">
                                        <Option value="S">SÁ∫ß</Option>
                                        <Option value="A">AÁ∫ß</Option>
                                        <Option value="B">BÁ∫ß</Option>
                                        <Option value="C">CÁ∫ß</Option>
                                        <Option value="D">DÁ∫ß</Option>
                                    </Select>,
                                )}
                            </Form.Item>
                        </Col>
                        <Col xs={8}>
                            <Form.Item label="ÂçïÊ¨°Ëä±Ë¥π">
                                {getFieldDecorator('onceCost', {initialValue: luckyEntity.onceCost || 1})(
                                    <Input type='number' />,
                                )}
                            </Form.Item>
                        </Col>
                        <Col xs={8}>
                            <Form.Item label="10Ê¨°Ëä±Ë¥π">
                                {getFieldDecorator('tenTimesCost', {initialValue: luckyEntity.tenTimesCost || 10})(
                                    <Input type='number' />,
                                )}
                            </Form.Item>
                        </Col>
                        <Col xs={8}>
                            <Form.Item label="Ëä±Ë¥πÂçï‰Ωç">
                                {getFieldDecorator('costType', {initialValue: luckyEntity.costType || 1})(
                                    <Select>
                                        <Option value={1}>üí∞--ÈáëÂ∏Å</Option>
                                        <Option value={2}>üíé--ÈíªÁü≥</Option>
                                        <Option value={3}>üîë--Èí•Âåô</Option>
                                    </Select>
                                )}
                            </Form.Item>
                        </Col>
                        <Col xs={24}>
                            <Form.Item label="ÊèèËø∞">
                                {getFieldDecorator('description', {initialValue: luckyEntity.description || 'ÂÖçË¥πÁöÑÂç°ÂåÖÔºåËøòÁ≠âÂï•'})(
                                    <TextArea rows={3}></TextArea>
                                )}
                            </Form.Item>
                        </Col>
                    </Row>
                </Form>

            </Modal>
        )
    }
}


const LuckyUpdateModal = Form.create({name: 'game_card_modal3'})(LuckyUpdateModalForm);

export default LuckyUpdateModal
